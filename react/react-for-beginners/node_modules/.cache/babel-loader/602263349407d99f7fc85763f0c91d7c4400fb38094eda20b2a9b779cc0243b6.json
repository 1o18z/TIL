{"ast":null,"code":"var _jsxFileName = \"/Users/park-eunji/Desktop/react-for-beginners/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n//useEffect는 두 개의 argument를 가지는 function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [counter, setValue] = useState(0);\n  const [keyword, setKeyword] = useState(\"\");\n  const onClick = () => setValue(prev => prev + 1);\n  const onChange = event => setKeyword(event.target.value);\n  // keyword에서 set해주고 있어서 input 창에 글자 입력할 때마다 state를 modify 한다.\n  //(=I runa ll the time을 계속 출력해준다.)\n  console.log(\"I run all the time\");\n  // 무언갈 할 때마다 출력되는 코드\n  useEffect(() => {\n    console.log(\"CALL THE API...\");\n  }, []); //이건 그냥 처음 한 번만 출력되는 코드\n  // 두 번째 argument인 []를 dependency라고 함\n  useEffect(() => {\n    if (keyword !== \"\" && keyword.length > 5) {\n      //keyword 빈값 아니고 5자 이상이면 그 때 keyword 검색\n      console.log(\"SEARCH FOR\", keyword);\n    }\n  }, [keyword]);\n  // keyword가 변할 때마다 코드를 실행할 거라고 리액트에게 알려주는 것\n  // (= keyword 변할 때마다 SEARCG FOR 어쩌구라고 출력)\n  // 결국 빈 array [] 썼을 때는 한 번만 실행되는 이유는\n  // 변화하는 거를 기준으로 출력하는데 변화하는 걸 지켜볼게 없으니까 처음 한 번만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: keyword,\n      onChange: onChange,\n      type: \"text\",\n      placeholder: \"Search here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hjnN0EM+qXibYxecNoadgIeOUN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","App","counter","setValue","keyword","setKeyword","onClick","prev","onChange","event","target","value","console","log","length"],"sources":["/Users/park-eunji/Desktop/react-for-beginners/src/App.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\n//useEffect는 두 개의 argument를 가지는 function\n\nfunction App() {\n  const [counter, setValue] = useState(0);\n  const [keyword, setKeyword] = useState(\"\");\n  const onClick = () => setValue((prev) => prev  + 1); \n  const onChange = (event) => setKeyword(event.target.value);\n           // keyword에서 set해주고 있어서 input 창에 글자 입력할 때마다 state를 modify 한다.\n                                                            //(=I runa ll the time을 계속 출력해준다.)\n  console.log(\"I run all the time\");\n  // 무언갈 할 때마다 출력되는 코드\n  useEffect(() => {\n    console.log(\"CALL THE API...\");\n  }, []); //이건 그냥 처음 한 번만 출력되는 코드\n  // 두 번째 argument인 []를 dependency라고 함\n  useEffect(() => {\n    if(keyword !== \"\" && keyword.length > 5) { \n      //keyword 빈값 아니고 5자 이상이면 그 때 keyword 검색\n    console.log(\"SEARCH FOR\", keyword);\n    }\n  }, [keyword]);\n    // keyword가 변할 때마다 코드를 실행할 거라고 리액트에게 알려주는 것\n    // (= keyword 변할 때마다 SEARCG FOR 어쩌구라고 출력)\n    // 결국 빈 array [] 썼을 때는 한 번만 실행되는 이유는\n    // 변화하는 거를 기준으로 출력하는데 변화하는 걸 지켜볼게 없으니까 처음 한 번만 실행\n  \n  return(\n    <div>\n      <input\n        value={keyword}\n        onChange={onChange} \n        type=\"text\" \n        placeholder=\"Search here...\" />\n      <h1>{counter}</h1>\n      <button onClick={onClick}>Click me</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMO,OAAO,GAAG,MAAMH,QAAQ,CAAEI,IAAI,IAAKA,IAAI,GAAI,CAAC,CAAC;EACnD,MAAMC,QAAQ,GAAIC,KAAK,IAAKJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjD;EACiD;EAC1DC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjC;EACAb,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR;EACAb,SAAS,CAAC,MAAM;IACd,IAAGI,OAAO,KAAK,EAAE,IAAIA,OAAO,CAACU,MAAM,GAAG,CAAC,EAAE;MACvC;MACFF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAET,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACX;EACA;EACA;EACA;;EAEF,oBACE;IAAA,wBACE;MACE,KAAK,EAAEA,OAAQ;MACf,QAAQ,EAAEI,QAAS;MACnB,IAAI,EAAC,MAAM;MACX,WAAW,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eACjC;MAAA,UAAKN;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,eAClB;MAAQ,OAAO,EAAEI,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACvC;AAEV;AAAC,GAnCQL,GAAG;AAAA,KAAHA,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}